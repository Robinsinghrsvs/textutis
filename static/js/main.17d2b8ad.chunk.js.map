{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","background","rows","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.17d2b8ad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n  aboutText: \"about\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase!\", \"success\");\r\n  }\r\n\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to LowerCase!\", \"success\");\r\n  }\r\n\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared!\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    console.log(\"I am copy\");\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied To Clipboard!\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Removed!\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h1>{props.heading} </h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              background: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h2>your text summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characterers\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter Something In The Textbox Above To Preview It Here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={` alert alert-${props.alert.type} alert-dismissible fade show `} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} ;\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import React from \"react\";\nimport \"./App.css\";\n// import About from './components/About';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\n// import {\n//   BrowserRouter as Router,\n//   Switch ,\n//   Route,\n// }  from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode'\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode'\n    }\n  };\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm\n          showAlert={showAlert}\n          heading=\"Enter the text to analyze below\"\n          mode={mode} />\n          {/* </Route>\n      </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}